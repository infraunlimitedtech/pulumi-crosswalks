// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// TransportServer defines the TransportServer resource.
type TransportServer struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
	// TransportServerSpec is the spec of the TransportServer resource.
	Spec TransportServerSpecPtrOutput `pulumi:"spec"`
	// TransportServerStatus defines the status for the TransportServer resource.
	Status TransportServerStatusPtrOutput `pulumi:"status"`
}

// NewTransportServer registers a new resource with the given unique name, arguments, and options.
func NewTransportServer(ctx *pulumi.Context,
	name string, args *TransportServerArgs, opts ...pulumi.ResourceOption) (*TransportServer, error) {
	if args == nil {
		args = &TransportServerArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("k8s.nginx.org/v1alpha1")
	args.Kind = pulumi.StringPtr("TransportServer")
	var resource TransportServer
	err := ctx.RegisterResource("kubernetes:k8s.nginx.org/v1alpha1:TransportServer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransportServer gets an existing TransportServer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransportServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransportServerState, opts ...pulumi.ResourceOption) (*TransportServer, error) {
	var resource TransportServer
	err := ctx.ReadResource("kubernetes:k8s.nginx.org/v1alpha1:TransportServer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransportServer resources.
type transportServerState struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TransportServerSpec is the spec of the TransportServer resource.
	Spec *TransportServerSpec `pulumi:"spec"`
	// TransportServerStatus defines the status for the TransportServer resource.
	Status *TransportServerStatus `pulumi:"status"`
}

type TransportServerState struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// TransportServerSpec is the spec of the TransportServer resource.
	Spec TransportServerSpecPtrInput
	// TransportServerStatus defines the status for the TransportServer resource.
	Status TransportServerStatusPtrInput
}

func (TransportServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*transportServerState)(nil)).Elem()
}

type transportServerArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TransportServerSpec is the spec of the TransportServer resource.
	Spec *TransportServerSpec `pulumi:"spec"`
	// TransportServerStatus defines the status for the TransportServer resource.
	Status *TransportServerStatus `pulumi:"status"`
}

// The set of arguments for constructing a TransportServer resource.
type TransportServerArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// TransportServerSpec is the spec of the TransportServer resource.
	Spec TransportServerSpecPtrInput
	// TransportServerStatus defines the status for the TransportServer resource.
	Status TransportServerStatusPtrInput
}

func (TransportServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transportServerArgs)(nil)).Elem()
}

type TransportServerInput interface {
	pulumi.Input

	ToTransportServerOutput() TransportServerOutput
	ToTransportServerOutputWithContext(ctx context.Context) TransportServerOutput
}

func (*TransportServer) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServer)(nil))
}

func (i *TransportServer) ToTransportServerOutput() TransportServerOutput {
	return i.ToTransportServerOutputWithContext(context.Background())
}

func (i *TransportServer) ToTransportServerOutputWithContext(ctx context.Context) TransportServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerOutput)
}

type TransportServerOutput struct {
	*pulumi.OutputState
}

func (TransportServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServer)(nil))
}

func (o TransportServerOutput) ToTransportServerOutput() TransportServerOutput {
	return o
}

func (o TransportServerOutput) ToTransportServerOutputWithContext(ctx context.Context) TransportServerOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TransportServerOutput{})
}
