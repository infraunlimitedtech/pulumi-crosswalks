// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// GlobalConfiguration defines the GlobalConfiguration resource.
type GlobalConfigurationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// GlobalConfigurationSpec is the spec of the GlobalConfiguration resource.
	Spec *GlobalConfigurationSpec `pulumi:"spec"`
}

// GlobalConfigurationTypeInput is an input type that accepts GlobalConfigurationTypeArgs and GlobalConfigurationTypeOutput values.
// You can construct a concrete instance of `GlobalConfigurationTypeInput` via:
//
//          GlobalConfigurationTypeArgs{...}
type GlobalConfigurationTypeInput interface {
	pulumi.Input

	ToGlobalConfigurationTypeOutput() GlobalConfigurationTypeOutput
	ToGlobalConfigurationTypeOutputWithContext(context.Context) GlobalConfigurationTypeOutput
}

// GlobalConfiguration defines the GlobalConfiguration resource.
type GlobalConfigurationTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// GlobalConfigurationSpec is the spec of the GlobalConfiguration resource.
	Spec GlobalConfigurationSpecPtrInput `pulumi:"spec"`
}

func (GlobalConfigurationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalConfigurationType)(nil)).Elem()
}

func (i GlobalConfigurationTypeArgs) ToGlobalConfigurationTypeOutput() GlobalConfigurationTypeOutput {
	return i.ToGlobalConfigurationTypeOutputWithContext(context.Background())
}

func (i GlobalConfigurationTypeArgs) ToGlobalConfigurationTypeOutputWithContext(ctx context.Context) GlobalConfigurationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalConfigurationTypeOutput)
}

// GlobalConfiguration defines the GlobalConfiguration resource.
type GlobalConfigurationTypeOutput struct{ *pulumi.OutputState }

func (GlobalConfigurationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalConfigurationType)(nil)).Elem()
}

func (o GlobalConfigurationTypeOutput) ToGlobalConfigurationTypeOutput() GlobalConfigurationTypeOutput {
	return o
}

func (o GlobalConfigurationTypeOutput) ToGlobalConfigurationTypeOutputWithContext(ctx context.Context) GlobalConfigurationTypeOutput {
	return o
}

func (o GlobalConfigurationTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalConfigurationType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o GlobalConfigurationTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalConfigurationType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o GlobalConfigurationTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v GlobalConfigurationType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// GlobalConfigurationSpec is the spec of the GlobalConfiguration resource.
func (o GlobalConfigurationTypeOutput) Spec() GlobalConfigurationSpecPtrOutput {
	return o.ApplyT(func(v GlobalConfigurationType) *GlobalConfigurationSpec { return v.Spec }).(GlobalConfigurationSpecPtrOutput)
}

type GlobalConfigurationMetadata struct {
}

// GlobalConfigurationMetadataInput is an input type that accepts GlobalConfigurationMetadataArgs and GlobalConfigurationMetadataOutput values.
// You can construct a concrete instance of `GlobalConfigurationMetadataInput` via:
//
//          GlobalConfigurationMetadataArgs{...}
type GlobalConfigurationMetadataInput interface {
	pulumi.Input

	ToGlobalConfigurationMetadataOutput() GlobalConfigurationMetadataOutput
	ToGlobalConfigurationMetadataOutputWithContext(context.Context) GlobalConfigurationMetadataOutput
}

type GlobalConfigurationMetadataArgs struct {
}

func (GlobalConfigurationMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalConfigurationMetadata)(nil)).Elem()
}

func (i GlobalConfigurationMetadataArgs) ToGlobalConfigurationMetadataOutput() GlobalConfigurationMetadataOutput {
	return i.ToGlobalConfigurationMetadataOutputWithContext(context.Background())
}

func (i GlobalConfigurationMetadataArgs) ToGlobalConfigurationMetadataOutputWithContext(ctx context.Context) GlobalConfigurationMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalConfigurationMetadataOutput)
}

type GlobalConfigurationMetadataOutput struct{ *pulumi.OutputState }

func (GlobalConfigurationMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalConfigurationMetadata)(nil)).Elem()
}

func (o GlobalConfigurationMetadataOutput) ToGlobalConfigurationMetadataOutput() GlobalConfigurationMetadataOutput {
	return o
}

func (o GlobalConfigurationMetadataOutput) ToGlobalConfigurationMetadataOutputWithContext(ctx context.Context) GlobalConfigurationMetadataOutput {
	return o
}

// GlobalConfigurationSpec is the spec of the GlobalConfiguration resource.
type GlobalConfigurationSpec struct {
	Listeners []GlobalConfigurationSpecListeners `pulumi:"listeners"`
}

// GlobalConfigurationSpecInput is an input type that accepts GlobalConfigurationSpecArgs and GlobalConfigurationSpecOutput values.
// You can construct a concrete instance of `GlobalConfigurationSpecInput` via:
//
//          GlobalConfigurationSpecArgs{...}
type GlobalConfigurationSpecInput interface {
	pulumi.Input

	ToGlobalConfigurationSpecOutput() GlobalConfigurationSpecOutput
	ToGlobalConfigurationSpecOutputWithContext(context.Context) GlobalConfigurationSpecOutput
}

// GlobalConfigurationSpec is the spec of the GlobalConfiguration resource.
type GlobalConfigurationSpecArgs struct {
	Listeners GlobalConfigurationSpecListenersArrayInput `pulumi:"listeners"`
}

func (GlobalConfigurationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalConfigurationSpec)(nil)).Elem()
}

func (i GlobalConfigurationSpecArgs) ToGlobalConfigurationSpecOutput() GlobalConfigurationSpecOutput {
	return i.ToGlobalConfigurationSpecOutputWithContext(context.Background())
}

func (i GlobalConfigurationSpecArgs) ToGlobalConfigurationSpecOutputWithContext(ctx context.Context) GlobalConfigurationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalConfigurationSpecOutput)
}

func (i GlobalConfigurationSpecArgs) ToGlobalConfigurationSpecPtrOutput() GlobalConfigurationSpecPtrOutput {
	return i.ToGlobalConfigurationSpecPtrOutputWithContext(context.Background())
}

func (i GlobalConfigurationSpecArgs) ToGlobalConfigurationSpecPtrOutputWithContext(ctx context.Context) GlobalConfigurationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalConfigurationSpecOutput).ToGlobalConfigurationSpecPtrOutputWithContext(ctx)
}

// GlobalConfigurationSpecPtrInput is an input type that accepts GlobalConfigurationSpecArgs, GlobalConfigurationSpecPtr and GlobalConfigurationSpecPtrOutput values.
// You can construct a concrete instance of `GlobalConfigurationSpecPtrInput` via:
//
//          GlobalConfigurationSpecArgs{...}
//
//  or:
//
//          nil
type GlobalConfigurationSpecPtrInput interface {
	pulumi.Input

	ToGlobalConfigurationSpecPtrOutput() GlobalConfigurationSpecPtrOutput
	ToGlobalConfigurationSpecPtrOutputWithContext(context.Context) GlobalConfigurationSpecPtrOutput
}

type globalConfigurationSpecPtrType GlobalConfigurationSpecArgs

func GlobalConfigurationSpecPtr(v *GlobalConfigurationSpecArgs) GlobalConfigurationSpecPtrInput {
	return (*globalConfigurationSpecPtrType)(v)
}

func (*globalConfigurationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalConfigurationSpec)(nil)).Elem()
}

func (i *globalConfigurationSpecPtrType) ToGlobalConfigurationSpecPtrOutput() GlobalConfigurationSpecPtrOutput {
	return i.ToGlobalConfigurationSpecPtrOutputWithContext(context.Background())
}

func (i *globalConfigurationSpecPtrType) ToGlobalConfigurationSpecPtrOutputWithContext(ctx context.Context) GlobalConfigurationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalConfigurationSpecPtrOutput)
}

// GlobalConfigurationSpec is the spec of the GlobalConfiguration resource.
type GlobalConfigurationSpecOutput struct{ *pulumi.OutputState }

func (GlobalConfigurationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalConfigurationSpec)(nil)).Elem()
}

func (o GlobalConfigurationSpecOutput) ToGlobalConfigurationSpecOutput() GlobalConfigurationSpecOutput {
	return o
}

func (o GlobalConfigurationSpecOutput) ToGlobalConfigurationSpecOutputWithContext(ctx context.Context) GlobalConfigurationSpecOutput {
	return o
}

func (o GlobalConfigurationSpecOutput) ToGlobalConfigurationSpecPtrOutput() GlobalConfigurationSpecPtrOutput {
	return o.ToGlobalConfigurationSpecPtrOutputWithContext(context.Background())
}

func (o GlobalConfigurationSpecOutput) ToGlobalConfigurationSpecPtrOutputWithContext(ctx context.Context) GlobalConfigurationSpecPtrOutput {
	return o.ApplyT(func(v GlobalConfigurationSpec) *GlobalConfigurationSpec {
		return &v
	}).(GlobalConfigurationSpecPtrOutput)
}
func (o GlobalConfigurationSpecOutput) Listeners() GlobalConfigurationSpecListenersArrayOutput {
	return o.ApplyT(func(v GlobalConfigurationSpec) []GlobalConfigurationSpecListeners { return v.Listeners }).(GlobalConfigurationSpecListenersArrayOutput)
}

type GlobalConfigurationSpecPtrOutput struct{ *pulumi.OutputState }

func (GlobalConfigurationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalConfigurationSpec)(nil)).Elem()
}

func (o GlobalConfigurationSpecPtrOutput) ToGlobalConfigurationSpecPtrOutput() GlobalConfigurationSpecPtrOutput {
	return o
}

func (o GlobalConfigurationSpecPtrOutput) ToGlobalConfigurationSpecPtrOutputWithContext(ctx context.Context) GlobalConfigurationSpecPtrOutput {
	return o
}

func (o GlobalConfigurationSpecPtrOutput) Elem() GlobalConfigurationSpecOutput {
	return o.ApplyT(func(v *GlobalConfigurationSpec) GlobalConfigurationSpec { return *v }).(GlobalConfigurationSpecOutput)
}

func (o GlobalConfigurationSpecPtrOutput) Listeners() GlobalConfigurationSpecListenersArrayOutput {
	return o.ApplyT(func(v *GlobalConfigurationSpec) []GlobalConfigurationSpecListeners {
		if v == nil {
			return nil
		}
		return v.Listeners
	}).(GlobalConfigurationSpecListenersArrayOutput)
}

// Listener defines a listener.
type GlobalConfigurationSpecListeners struct {
	Name     *string `pulumi:"name"`
	Port     *int    `pulumi:"port"`
	Protocol *string `pulumi:"protocol"`
}

// GlobalConfigurationSpecListenersInput is an input type that accepts GlobalConfigurationSpecListenersArgs and GlobalConfigurationSpecListenersOutput values.
// You can construct a concrete instance of `GlobalConfigurationSpecListenersInput` via:
//
//          GlobalConfigurationSpecListenersArgs{...}
type GlobalConfigurationSpecListenersInput interface {
	pulumi.Input

	ToGlobalConfigurationSpecListenersOutput() GlobalConfigurationSpecListenersOutput
	ToGlobalConfigurationSpecListenersOutputWithContext(context.Context) GlobalConfigurationSpecListenersOutput
}

// Listener defines a listener.
type GlobalConfigurationSpecListenersArgs struct {
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Port     pulumi.IntPtrInput    `pulumi:"port"`
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (GlobalConfigurationSpecListenersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalConfigurationSpecListeners)(nil)).Elem()
}

func (i GlobalConfigurationSpecListenersArgs) ToGlobalConfigurationSpecListenersOutput() GlobalConfigurationSpecListenersOutput {
	return i.ToGlobalConfigurationSpecListenersOutputWithContext(context.Background())
}

func (i GlobalConfigurationSpecListenersArgs) ToGlobalConfigurationSpecListenersOutputWithContext(ctx context.Context) GlobalConfigurationSpecListenersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalConfigurationSpecListenersOutput)
}

// GlobalConfigurationSpecListenersArrayInput is an input type that accepts GlobalConfigurationSpecListenersArray and GlobalConfigurationSpecListenersArrayOutput values.
// You can construct a concrete instance of `GlobalConfigurationSpecListenersArrayInput` via:
//
//          GlobalConfigurationSpecListenersArray{ GlobalConfigurationSpecListenersArgs{...} }
type GlobalConfigurationSpecListenersArrayInput interface {
	pulumi.Input

	ToGlobalConfigurationSpecListenersArrayOutput() GlobalConfigurationSpecListenersArrayOutput
	ToGlobalConfigurationSpecListenersArrayOutputWithContext(context.Context) GlobalConfigurationSpecListenersArrayOutput
}

type GlobalConfigurationSpecListenersArray []GlobalConfigurationSpecListenersInput

func (GlobalConfigurationSpecListenersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalConfigurationSpecListeners)(nil)).Elem()
}

func (i GlobalConfigurationSpecListenersArray) ToGlobalConfigurationSpecListenersArrayOutput() GlobalConfigurationSpecListenersArrayOutput {
	return i.ToGlobalConfigurationSpecListenersArrayOutputWithContext(context.Background())
}

func (i GlobalConfigurationSpecListenersArray) ToGlobalConfigurationSpecListenersArrayOutputWithContext(ctx context.Context) GlobalConfigurationSpecListenersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalConfigurationSpecListenersArrayOutput)
}

// Listener defines a listener.
type GlobalConfigurationSpecListenersOutput struct{ *pulumi.OutputState }

func (GlobalConfigurationSpecListenersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalConfigurationSpecListeners)(nil)).Elem()
}

func (o GlobalConfigurationSpecListenersOutput) ToGlobalConfigurationSpecListenersOutput() GlobalConfigurationSpecListenersOutput {
	return o
}

func (o GlobalConfigurationSpecListenersOutput) ToGlobalConfigurationSpecListenersOutputWithContext(ctx context.Context) GlobalConfigurationSpecListenersOutput {
	return o
}

func (o GlobalConfigurationSpecListenersOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalConfigurationSpecListeners) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GlobalConfigurationSpecListenersOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GlobalConfigurationSpecListeners) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o GlobalConfigurationSpecListenersOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalConfigurationSpecListeners) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type GlobalConfigurationSpecListenersArrayOutput struct{ *pulumi.OutputState }

func (GlobalConfigurationSpecListenersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalConfigurationSpecListeners)(nil)).Elem()
}

func (o GlobalConfigurationSpecListenersArrayOutput) ToGlobalConfigurationSpecListenersArrayOutput() GlobalConfigurationSpecListenersArrayOutput {
	return o
}

func (o GlobalConfigurationSpecListenersArrayOutput) ToGlobalConfigurationSpecListenersArrayOutputWithContext(ctx context.Context) GlobalConfigurationSpecListenersArrayOutput {
	return o
}

func (o GlobalConfigurationSpecListenersArrayOutput) Index(i pulumi.IntInput) GlobalConfigurationSpecListenersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalConfigurationSpecListeners {
		return vs[0].([]GlobalConfigurationSpecListeners)[vs[1].(int)]
	}).(GlobalConfigurationSpecListenersOutput)
}

// TransportServer defines the TransportServer resource.
type TransportServerType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// TransportServerSpec is the spec of the TransportServer resource.
	Spec *TransportServerSpec `pulumi:"spec"`
	// TransportServerStatus defines the status for the TransportServer resource.
	Status *TransportServerStatus `pulumi:"status"`
}

// TransportServerTypeInput is an input type that accepts TransportServerTypeArgs and TransportServerTypeOutput values.
// You can construct a concrete instance of `TransportServerTypeInput` via:
//
//          TransportServerTypeArgs{...}
type TransportServerTypeInput interface {
	pulumi.Input

	ToTransportServerTypeOutput() TransportServerTypeOutput
	ToTransportServerTypeOutputWithContext(context.Context) TransportServerTypeOutput
}

// TransportServer defines the TransportServer resource.
type TransportServerTypeArgs struct {
	ApiVersion pulumi.StringPtrInput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// TransportServerSpec is the spec of the TransportServer resource.
	Spec TransportServerSpecPtrInput `pulumi:"spec"`
	// TransportServerStatus defines the status for the TransportServer resource.
	Status TransportServerStatusPtrInput `pulumi:"status"`
}

func (TransportServerTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerType)(nil)).Elem()
}

func (i TransportServerTypeArgs) ToTransportServerTypeOutput() TransportServerTypeOutput {
	return i.ToTransportServerTypeOutputWithContext(context.Background())
}

func (i TransportServerTypeArgs) ToTransportServerTypeOutputWithContext(ctx context.Context) TransportServerTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerTypeOutput)
}

// TransportServer defines the TransportServer resource.
type TransportServerTypeOutput struct{ *pulumi.OutputState }

func (TransportServerTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerType)(nil)).Elem()
}

func (o TransportServerTypeOutput) ToTransportServerTypeOutput() TransportServerTypeOutput {
	return o
}

func (o TransportServerTypeOutput) ToTransportServerTypeOutputWithContext(ctx context.Context) TransportServerTypeOutput {
	return o
}

func (o TransportServerTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o TransportServerTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o TransportServerTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v TransportServerType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// TransportServerSpec is the spec of the TransportServer resource.
func (o TransportServerTypeOutput) Spec() TransportServerSpecPtrOutput {
	return o.ApplyT(func(v TransportServerType) *TransportServerSpec { return v.Spec }).(TransportServerSpecPtrOutput)
}

// TransportServerStatus defines the status for the TransportServer resource.
func (o TransportServerTypeOutput) Status() TransportServerStatusPtrOutput {
	return o.ApplyT(func(v TransportServerType) *TransportServerStatus { return v.Status }).(TransportServerStatusPtrOutput)
}

type TransportServerMetadata struct {
}

// TransportServerMetadataInput is an input type that accepts TransportServerMetadataArgs and TransportServerMetadataOutput values.
// You can construct a concrete instance of `TransportServerMetadataInput` via:
//
//          TransportServerMetadataArgs{...}
type TransportServerMetadataInput interface {
	pulumi.Input

	ToTransportServerMetadataOutput() TransportServerMetadataOutput
	ToTransportServerMetadataOutputWithContext(context.Context) TransportServerMetadataOutput
}

type TransportServerMetadataArgs struct {
}

func (TransportServerMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerMetadata)(nil)).Elem()
}

func (i TransportServerMetadataArgs) ToTransportServerMetadataOutput() TransportServerMetadataOutput {
	return i.ToTransportServerMetadataOutputWithContext(context.Background())
}

func (i TransportServerMetadataArgs) ToTransportServerMetadataOutputWithContext(ctx context.Context) TransportServerMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerMetadataOutput)
}

type TransportServerMetadataOutput struct{ *pulumi.OutputState }

func (TransportServerMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerMetadata)(nil)).Elem()
}

func (o TransportServerMetadataOutput) ToTransportServerMetadataOutput() TransportServerMetadataOutput {
	return o
}

func (o TransportServerMetadataOutput) ToTransportServerMetadataOutputWithContext(ctx context.Context) TransportServerMetadataOutput {
	return o
}

// TransportServerSpec is the spec of the TransportServer resource.
type TransportServerSpec struct {
	// Action defines an action.
	Action           *TransportServerSpecAction `pulumi:"action"`
	Host             *string                    `pulumi:"host"`
	IngressClassName *string                    `pulumi:"ingressClassName"`
	// TransportServerListener defines a listener for a TransportServer.
	Listener       *TransportServerSpecListener `pulumi:"listener"`
	ServerSnippets *string                      `pulumi:"serverSnippets"`
	// SessionParameters defines session parameters.
	SessionParameters *TransportServerSpecSessionParameters `pulumi:"sessionParameters"`
	StreamSnippets    *string                               `pulumi:"streamSnippets"`
	// UpstreamParameters defines parameters for an upstream.
	UpstreamParameters *TransportServerSpecUpstreamParameters `pulumi:"upstreamParameters"`
	Upstreams          []TransportServerSpecUpstreams         `pulumi:"upstreams"`
}

// TransportServerSpecInput is an input type that accepts TransportServerSpecArgs and TransportServerSpecOutput values.
// You can construct a concrete instance of `TransportServerSpecInput` via:
//
//          TransportServerSpecArgs{...}
type TransportServerSpecInput interface {
	pulumi.Input

	ToTransportServerSpecOutput() TransportServerSpecOutput
	ToTransportServerSpecOutputWithContext(context.Context) TransportServerSpecOutput
}

// TransportServerSpec is the spec of the TransportServer resource.
type TransportServerSpecArgs struct {
	// Action defines an action.
	Action           TransportServerSpecActionPtrInput `pulumi:"action"`
	Host             pulumi.StringPtrInput             `pulumi:"host"`
	IngressClassName pulumi.StringPtrInput             `pulumi:"ingressClassName"`
	// TransportServerListener defines a listener for a TransportServer.
	Listener       TransportServerSpecListenerPtrInput `pulumi:"listener"`
	ServerSnippets pulumi.StringPtrInput               `pulumi:"serverSnippets"`
	// SessionParameters defines session parameters.
	SessionParameters TransportServerSpecSessionParametersPtrInput `pulumi:"sessionParameters"`
	StreamSnippets    pulumi.StringPtrInput                        `pulumi:"streamSnippets"`
	// UpstreamParameters defines parameters for an upstream.
	UpstreamParameters TransportServerSpecUpstreamParametersPtrInput `pulumi:"upstreamParameters"`
	Upstreams          TransportServerSpecUpstreamsArrayInput        `pulumi:"upstreams"`
}

func (TransportServerSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpec)(nil)).Elem()
}

func (i TransportServerSpecArgs) ToTransportServerSpecOutput() TransportServerSpecOutput {
	return i.ToTransportServerSpecOutputWithContext(context.Background())
}

func (i TransportServerSpecArgs) ToTransportServerSpecOutputWithContext(ctx context.Context) TransportServerSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecOutput)
}

func (i TransportServerSpecArgs) ToTransportServerSpecPtrOutput() TransportServerSpecPtrOutput {
	return i.ToTransportServerSpecPtrOutputWithContext(context.Background())
}

func (i TransportServerSpecArgs) ToTransportServerSpecPtrOutputWithContext(ctx context.Context) TransportServerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecOutput).ToTransportServerSpecPtrOutputWithContext(ctx)
}

// TransportServerSpecPtrInput is an input type that accepts TransportServerSpecArgs, TransportServerSpecPtr and TransportServerSpecPtrOutput values.
// You can construct a concrete instance of `TransportServerSpecPtrInput` via:
//
//          TransportServerSpecArgs{...}
//
//  or:
//
//          nil
type TransportServerSpecPtrInput interface {
	pulumi.Input

	ToTransportServerSpecPtrOutput() TransportServerSpecPtrOutput
	ToTransportServerSpecPtrOutputWithContext(context.Context) TransportServerSpecPtrOutput
}

type transportServerSpecPtrType TransportServerSpecArgs

func TransportServerSpecPtr(v *TransportServerSpecArgs) TransportServerSpecPtrInput {
	return (*transportServerSpecPtrType)(v)
}

func (*transportServerSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpec)(nil)).Elem()
}

func (i *transportServerSpecPtrType) ToTransportServerSpecPtrOutput() TransportServerSpecPtrOutput {
	return i.ToTransportServerSpecPtrOutputWithContext(context.Background())
}

func (i *transportServerSpecPtrType) ToTransportServerSpecPtrOutputWithContext(ctx context.Context) TransportServerSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecPtrOutput)
}

// TransportServerSpec is the spec of the TransportServer resource.
type TransportServerSpecOutput struct{ *pulumi.OutputState }

func (TransportServerSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpec)(nil)).Elem()
}

func (o TransportServerSpecOutput) ToTransportServerSpecOutput() TransportServerSpecOutput {
	return o
}

func (o TransportServerSpecOutput) ToTransportServerSpecOutputWithContext(ctx context.Context) TransportServerSpecOutput {
	return o
}

func (o TransportServerSpecOutput) ToTransportServerSpecPtrOutput() TransportServerSpecPtrOutput {
	return o.ToTransportServerSpecPtrOutputWithContext(context.Background())
}

func (o TransportServerSpecOutput) ToTransportServerSpecPtrOutputWithContext(ctx context.Context) TransportServerSpecPtrOutput {
	return o.ApplyT(func(v TransportServerSpec) *TransportServerSpec {
		return &v
	}).(TransportServerSpecPtrOutput)
}

// Action defines an action.
func (o TransportServerSpecOutput) Action() TransportServerSpecActionPtrOutput {
	return o.ApplyT(func(v TransportServerSpec) *TransportServerSpecAction { return v.Action }).(TransportServerSpecActionPtrOutput)
}

func (o TransportServerSpecOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpec) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecOutput) IngressClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpec) *string { return v.IngressClassName }).(pulumi.StringPtrOutput)
}

// TransportServerListener defines a listener for a TransportServer.
func (o TransportServerSpecOutput) Listener() TransportServerSpecListenerPtrOutput {
	return o.ApplyT(func(v TransportServerSpec) *TransportServerSpecListener { return v.Listener }).(TransportServerSpecListenerPtrOutput)
}

func (o TransportServerSpecOutput) ServerSnippets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpec) *string { return v.ServerSnippets }).(pulumi.StringPtrOutput)
}

// SessionParameters defines session parameters.
func (o TransportServerSpecOutput) SessionParameters() TransportServerSpecSessionParametersPtrOutput {
	return o.ApplyT(func(v TransportServerSpec) *TransportServerSpecSessionParameters { return v.SessionParameters }).(TransportServerSpecSessionParametersPtrOutput)
}

func (o TransportServerSpecOutput) StreamSnippets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpec) *string { return v.StreamSnippets }).(pulumi.StringPtrOutput)
}

// UpstreamParameters defines parameters for an upstream.
func (o TransportServerSpecOutput) UpstreamParameters() TransportServerSpecUpstreamParametersPtrOutput {
	return o.ApplyT(func(v TransportServerSpec) *TransportServerSpecUpstreamParameters { return v.UpstreamParameters }).(TransportServerSpecUpstreamParametersPtrOutput)
}

func (o TransportServerSpecOutput) Upstreams() TransportServerSpecUpstreamsArrayOutput {
	return o.ApplyT(func(v TransportServerSpec) []TransportServerSpecUpstreams { return v.Upstreams }).(TransportServerSpecUpstreamsArrayOutput)
}

type TransportServerSpecPtrOutput struct{ *pulumi.OutputState }

func (TransportServerSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpec)(nil)).Elem()
}

func (o TransportServerSpecPtrOutput) ToTransportServerSpecPtrOutput() TransportServerSpecPtrOutput {
	return o
}

func (o TransportServerSpecPtrOutput) ToTransportServerSpecPtrOutputWithContext(ctx context.Context) TransportServerSpecPtrOutput {
	return o
}

func (o TransportServerSpecPtrOutput) Elem() TransportServerSpecOutput {
	return o.ApplyT(func(v *TransportServerSpec) TransportServerSpec { return *v }).(TransportServerSpecOutput)
}

// Action defines an action.
func (o TransportServerSpecPtrOutput) Action() TransportServerSpecActionPtrOutput {
	return o.ApplyT(func(v *TransportServerSpec) *TransportServerSpecAction {
		if v == nil {
			return nil
		}
		return v.Action
	}).(TransportServerSpecActionPtrOutput)
}

func (o TransportServerSpecPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpec) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecPtrOutput) IngressClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpec) *string {
		if v == nil {
			return nil
		}
		return v.IngressClassName
	}).(pulumi.StringPtrOutput)
}

// TransportServerListener defines a listener for a TransportServer.
func (o TransportServerSpecPtrOutput) Listener() TransportServerSpecListenerPtrOutput {
	return o.ApplyT(func(v *TransportServerSpec) *TransportServerSpecListener {
		if v == nil {
			return nil
		}
		return v.Listener
	}).(TransportServerSpecListenerPtrOutput)
}

func (o TransportServerSpecPtrOutput) ServerSnippets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpec) *string {
		if v == nil {
			return nil
		}
		return v.ServerSnippets
	}).(pulumi.StringPtrOutput)
}

// SessionParameters defines session parameters.
func (o TransportServerSpecPtrOutput) SessionParameters() TransportServerSpecSessionParametersPtrOutput {
	return o.ApplyT(func(v *TransportServerSpec) *TransportServerSpecSessionParameters {
		if v == nil {
			return nil
		}
		return v.SessionParameters
	}).(TransportServerSpecSessionParametersPtrOutput)
}

func (o TransportServerSpecPtrOutput) StreamSnippets() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpec) *string {
		if v == nil {
			return nil
		}
		return v.StreamSnippets
	}).(pulumi.StringPtrOutput)
}

// UpstreamParameters defines parameters for an upstream.
func (o TransportServerSpecPtrOutput) UpstreamParameters() TransportServerSpecUpstreamParametersPtrOutput {
	return o.ApplyT(func(v *TransportServerSpec) *TransportServerSpecUpstreamParameters {
		if v == nil {
			return nil
		}
		return v.UpstreamParameters
	}).(TransportServerSpecUpstreamParametersPtrOutput)
}

func (o TransportServerSpecPtrOutput) Upstreams() TransportServerSpecUpstreamsArrayOutput {
	return o.ApplyT(func(v *TransportServerSpec) []TransportServerSpecUpstreams {
		if v == nil {
			return nil
		}
		return v.Upstreams
	}).(TransportServerSpecUpstreamsArrayOutput)
}

// Action defines an action.
type TransportServerSpecAction struct {
	Pass *string `pulumi:"pass"`
}

// TransportServerSpecActionInput is an input type that accepts TransportServerSpecActionArgs and TransportServerSpecActionOutput values.
// You can construct a concrete instance of `TransportServerSpecActionInput` via:
//
//          TransportServerSpecActionArgs{...}
type TransportServerSpecActionInput interface {
	pulumi.Input

	ToTransportServerSpecActionOutput() TransportServerSpecActionOutput
	ToTransportServerSpecActionOutputWithContext(context.Context) TransportServerSpecActionOutput
}

// Action defines an action.
type TransportServerSpecActionArgs struct {
	Pass pulumi.StringPtrInput `pulumi:"pass"`
}

func (TransportServerSpecActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecAction)(nil)).Elem()
}

func (i TransportServerSpecActionArgs) ToTransportServerSpecActionOutput() TransportServerSpecActionOutput {
	return i.ToTransportServerSpecActionOutputWithContext(context.Background())
}

func (i TransportServerSpecActionArgs) ToTransportServerSpecActionOutputWithContext(ctx context.Context) TransportServerSpecActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecActionOutput)
}

func (i TransportServerSpecActionArgs) ToTransportServerSpecActionPtrOutput() TransportServerSpecActionPtrOutput {
	return i.ToTransportServerSpecActionPtrOutputWithContext(context.Background())
}

func (i TransportServerSpecActionArgs) ToTransportServerSpecActionPtrOutputWithContext(ctx context.Context) TransportServerSpecActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecActionOutput).ToTransportServerSpecActionPtrOutputWithContext(ctx)
}

// TransportServerSpecActionPtrInput is an input type that accepts TransportServerSpecActionArgs, TransportServerSpecActionPtr and TransportServerSpecActionPtrOutput values.
// You can construct a concrete instance of `TransportServerSpecActionPtrInput` via:
//
//          TransportServerSpecActionArgs{...}
//
//  or:
//
//          nil
type TransportServerSpecActionPtrInput interface {
	pulumi.Input

	ToTransportServerSpecActionPtrOutput() TransportServerSpecActionPtrOutput
	ToTransportServerSpecActionPtrOutputWithContext(context.Context) TransportServerSpecActionPtrOutput
}

type transportServerSpecActionPtrType TransportServerSpecActionArgs

func TransportServerSpecActionPtr(v *TransportServerSpecActionArgs) TransportServerSpecActionPtrInput {
	return (*transportServerSpecActionPtrType)(v)
}

func (*transportServerSpecActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecAction)(nil)).Elem()
}

func (i *transportServerSpecActionPtrType) ToTransportServerSpecActionPtrOutput() TransportServerSpecActionPtrOutput {
	return i.ToTransportServerSpecActionPtrOutputWithContext(context.Background())
}

func (i *transportServerSpecActionPtrType) ToTransportServerSpecActionPtrOutputWithContext(ctx context.Context) TransportServerSpecActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecActionPtrOutput)
}

// Action defines an action.
type TransportServerSpecActionOutput struct{ *pulumi.OutputState }

func (TransportServerSpecActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecAction)(nil)).Elem()
}

func (o TransportServerSpecActionOutput) ToTransportServerSpecActionOutput() TransportServerSpecActionOutput {
	return o
}

func (o TransportServerSpecActionOutput) ToTransportServerSpecActionOutputWithContext(ctx context.Context) TransportServerSpecActionOutput {
	return o
}

func (o TransportServerSpecActionOutput) ToTransportServerSpecActionPtrOutput() TransportServerSpecActionPtrOutput {
	return o.ToTransportServerSpecActionPtrOutputWithContext(context.Background())
}

func (o TransportServerSpecActionOutput) ToTransportServerSpecActionPtrOutputWithContext(ctx context.Context) TransportServerSpecActionPtrOutput {
	return o.ApplyT(func(v TransportServerSpecAction) *TransportServerSpecAction {
		return &v
	}).(TransportServerSpecActionPtrOutput)
}
func (o TransportServerSpecActionOutput) Pass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecAction) *string { return v.Pass }).(pulumi.StringPtrOutput)
}

type TransportServerSpecActionPtrOutput struct{ *pulumi.OutputState }

func (TransportServerSpecActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecAction)(nil)).Elem()
}

func (o TransportServerSpecActionPtrOutput) ToTransportServerSpecActionPtrOutput() TransportServerSpecActionPtrOutput {
	return o
}

func (o TransportServerSpecActionPtrOutput) ToTransportServerSpecActionPtrOutputWithContext(ctx context.Context) TransportServerSpecActionPtrOutput {
	return o
}

func (o TransportServerSpecActionPtrOutput) Elem() TransportServerSpecActionOutput {
	return o.ApplyT(func(v *TransportServerSpecAction) TransportServerSpecAction { return *v }).(TransportServerSpecActionOutput)
}

func (o TransportServerSpecActionPtrOutput) Pass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecAction) *string {
		if v == nil {
			return nil
		}
		return v.Pass
	}).(pulumi.StringPtrOutput)
}

// TransportServerListener defines a listener for a TransportServer.
type TransportServerSpecListener struct {
	Name     *string `pulumi:"name"`
	Protocol *string `pulumi:"protocol"`
}

// TransportServerSpecListenerInput is an input type that accepts TransportServerSpecListenerArgs and TransportServerSpecListenerOutput values.
// You can construct a concrete instance of `TransportServerSpecListenerInput` via:
//
//          TransportServerSpecListenerArgs{...}
type TransportServerSpecListenerInput interface {
	pulumi.Input

	ToTransportServerSpecListenerOutput() TransportServerSpecListenerOutput
	ToTransportServerSpecListenerOutputWithContext(context.Context) TransportServerSpecListenerOutput
}

// TransportServerListener defines a listener for a TransportServer.
type TransportServerSpecListenerArgs struct {
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

func (TransportServerSpecListenerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecListener)(nil)).Elem()
}

func (i TransportServerSpecListenerArgs) ToTransportServerSpecListenerOutput() TransportServerSpecListenerOutput {
	return i.ToTransportServerSpecListenerOutputWithContext(context.Background())
}

func (i TransportServerSpecListenerArgs) ToTransportServerSpecListenerOutputWithContext(ctx context.Context) TransportServerSpecListenerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecListenerOutput)
}

func (i TransportServerSpecListenerArgs) ToTransportServerSpecListenerPtrOutput() TransportServerSpecListenerPtrOutput {
	return i.ToTransportServerSpecListenerPtrOutputWithContext(context.Background())
}

func (i TransportServerSpecListenerArgs) ToTransportServerSpecListenerPtrOutputWithContext(ctx context.Context) TransportServerSpecListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecListenerOutput).ToTransportServerSpecListenerPtrOutputWithContext(ctx)
}

// TransportServerSpecListenerPtrInput is an input type that accepts TransportServerSpecListenerArgs, TransportServerSpecListenerPtr and TransportServerSpecListenerPtrOutput values.
// You can construct a concrete instance of `TransportServerSpecListenerPtrInput` via:
//
//          TransportServerSpecListenerArgs{...}
//
//  or:
//
//          nil
type TransportServerSpecListenerPtrInput interface {
	pulumi.Input

	ToTransportServerSpecListenerPtrOutput() TransportServerSpecListenerPtrOutput
	ToTransportServerSpecListenerPtrOutputWithContext(context.Context) TransportServerSpecListenerPtrOutput
}

type transportServerSpecListenerPtrType TransportServerSpecListenerArgs

func TransportServerSpecListenerPtr(v *TransportServerSpecListenerArgs) TransportServerSpecListenerPtrInput {
	return (*transportServerSpecListenerPtrType)(v)
}

func (*transportServerSpecListenerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecListener)(nil)).Elem()
}

func (i *transportServerSpecListenerPtrType) ToTransportServerSpecListenerPtrOutput() TransportServerSpecListenerPtrOutput {
	return i.ToTransportServerSpecListenerPtrOutputWithContext(context.Background())
}

func (i *transportServerSpecListenerPtrType) ToTransportServerSpecListenerPtrOutputWithContext(ctx context.Context) TransportServerSpecListenerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecListenerPtrOutput)
}

// TransportServerListener defines a listener for a TransportServer.
type TransportServerSpecListenerOutput struct{ *pulumi.OutputState }

func (TransportServerSpecListenerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecListener)(nil)).Elem()
}

func (o TransportServerSpecListenerOutput) ToTransportServerSpecListenerOutput() TransportServerSpecListenerOutput {
	return o
}

func (o TransportServerSpecListenerOutput) ToTransportServerSpecListenerOutputWithContext(ctx context.Context) TransportServerSpecListenerOutput {
	return o
}

func (o TransportServerSpecListenerOutput) ToTransportServerSpecListenerPtrOutput() TransportServerSpecListenerPtrOutput {
	return o.ToTransportServerSpecListenerPtrOutputWithContext(context.Background())
}

func (o TransportServerSpecListenerOutput) ToTransportServerSpecListenerPtrOutputWithContext(ctx context.Context) TransportServerSpecListenerPtrOutput {
	return o.ApplyT(func(v TransportServerSpecListener) *TransportServerSpecListener {
		return &v
	}).(TransportServerSpecListenerPtrOutput)
}
func (o TransportServerSpecListenerOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecListener) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecListenerOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecListener) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type TransportServerSpecListenerPtrOutput struct{ *pulumi.OutputState }

func (TransportServerSpecListenerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecListener)(nil)).Elem()
}

func (o TransportServerSpecListenerPtrOutput) ToTransportServerSpecListenerPtrOutput() TransportServerSpecListenerPtrOutput {
	return o
}

func (o TransportServerSpecListenerPtrOutput) ToTransportServerSpecListenerPtrOutputWithContext(ctx context.Context) TransportServerSpecListenerPtrOutput {
	return o
}

func (o TransportServerSpecListenerPtrOutput) Elem() TransportServerSpecListenerOutput {
	return o.ApplyT(func(v *TransportServerSpecListener) TransportServerSpecListener { return *v }).(TransportServerSpecListenerOutput)
}

func (o TransportServerSpecListenerPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecListener) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecListenerPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecListener) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// SessionParameters defines session parameters.
type TransportServerSpecSessionParameters struct {
	Timeout *string `pulumi:"timeout"`
}

// TransportServerSpecSessionParametersInput is an input type that accepts TransportServerSpecSessionParametersArgs and TransportServerSpecSessionParametersOutput values.
// You can construct a concrete instance of `TransportServerSpecSessionParametersInput` via:
//
//          TransportServerSpecSessionParametersArgs{...}
type TransportServerSpecSessionParametersInput interface {
	pulumi.Input

	ToTransportServerSpecSessionParametersOutput() TransportServerSpecSessionParametersOutput
	ToTransportServerSpecSessionParametersOutputWithContext(context.Context) TransportServerSpecSessionParametersOutput
}

// SessionParameters defines session parameters.
type TransportServerSpecSessionParametersArgs struct {
	Timeout pulumi.StringPtrInput `pulumi:"timeout"`
}

func (TransportServerSpecSessionParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecSessionParameters)(nil)).Elem()
}

func (i TransportServerSpecSessionParametersArgs) ToTransportServerSpecSessionParametersOutput() TransportServerSpecSessionParametersOutput {
	return i.ToTransportServerSpecSessionParametersOutputWithContext(context.Background())
}

func (i TransportServerSpecSessionParametersArgs) ToTransportServerSpecSessionParametersOutputWithContext(ctx context.Context) TransportServerSpecSessionParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecSessionParametersOutput)
}

func (i TransportServerSpecSessionParametersArgs) ToTransportServerSpecSessionParametersPtrOutput() TransportServerSpecSessionParametersPtrOutput {
	return i.ToTransportServerSpecSessionParametersPtrOutputWithContext(context.Background())
}

func (i TransportServerSpecSessionParametersArgs) ToTransportServerSpecSessionParametersPtrOutputWithContext(ctx context.Context) TransportServerSpecSessionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecSessionParametersOutput).ToTransportServerSpecSessionParametersPtrOutputWithContext(ctx)
}

// TransportServerSpecSessionParametersPtrInput is an input type that accepts TransportServerSpecSessionParametersArgs, TransportServerSpecSessionParametersPtr and TransportServerSpecSessionParametersPtrOutput values.
// You can construct a concrete instance of `TransportServerSpecSessionParametersPtrInput` via:
//
//          TransportServerSpecSessionParametersArgs{...}
//
//  or:
//
//          nil
type TransportServerSpecSessionParametersPtrInput interface {
	pulumi.Input

	ToTransportServerSpecSessionParametersPtrOutput() TransportServerSpecSessionParametersPtrOutput
	ToTransportServerSpecSessionParametersPtrOutputWithContext(context.Context) TransportServerSpecSessionParametersPtrOutput
}

type transportServerSpecSessionParametersPtrType TransportServerSpecSessionParametersArgs

func TransportServerSpecSessionParametersPtr(v *TransportServerSpecSessionParametersArgs) TransportServerSpecSessionParametersPtrInput {
	return (*transportServerSpecSessionParametersPtrType)(v)
}

func (*transportServerSpecSessionParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecSessionParameters)(nil)).Elem()
}

func (i *transportServerSpecSessionParametersPtrType) ToTransportServerSpecSessionParametersPtrOutput() TransportServerSpecSessionParametersPtrOutput {
	return i.ToTransportServerSpecSessionParametersPtrOutputWithContext(context.Background())
}

func (i *transportServerSpecSessionParametersPtrType) ToTransportServerSpecSessionParametersPtrOutputWithContext(ctx context.Context) TransportServerSpecSessionParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecSessionParametersPtrOutput)
}

// SessionParameters defines session parameters.
type TransportServerSpecSessionParametersOutput struct{ *pulumi.OutputState }

func (TransportServerSpecSessionParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecSessionParameters)(nil)).Elem()
}

func (o TransportServerSpecSessionParametersOutput) ToTransportServerSpecSessionParametersOutput() TransportServerSpecSessionParametersOutput {
	return o
}

func (o TransportServerSpecSessionParametersOutput) ToTransportServerSpecSessionParametersOutputWithContext(ctx context.Context) TransportServerSpecSessionParametersOutput {
	return o
}

func (o TransportServerSpecSessionParametersOutput) ToTransportServerSpecSessionParametersPtrOutput() TransportServerSpecSessionParametersPtrOutput {
	return o.ToTransportServerSpecSessionParametersPtrOutputWithContext(context.Background())
}

func (o TransportServerSpecSessionParametersOutput) ToTransportServerSpecSessionParametersPtrOutputWithContext(ctx context.Context) TransportServerSpecSessionParametersPtrOutput {
	return o.ApplyT(func(v TransportServerSpecSessionParameters) *TransportServerSpecSessionParameters {
		return &v
	}).(TransportServerSpecSessionParametersPtrOutput)
}
func (o TransportServerSpecSessionParametersOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecSessionParameters) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TransportServerSpecSessionParametersPtrOutput struct{ *pulumi.OutputState }

func (TransportServerSpecSessionParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecSessionParameters)(nil)).Elem()
}

func (o TransportServerSpecSessionParametersPtrOutput) ToTransportServerSpecSessionParametersPtrOutput() TransportServerSpecSessionParametersPtrOutput {
	return o
}

func (o TransportServerSpecSessionParametersPtrOutput) ToTransportServerSpecSessionParametersPtrOutputWithContext(ctx context.Context) TransportServerSpecSessionParametersPtrOutput {
	return o
}

func (o TransportServerSpecSessionParametersPtrOutput) Elem() TransportServerSpecSessionParametersOutput {
	return o.ApplyT(func(v *TransportServerSpecSessionParameters) TransportServerSpecSessionParameters { return *v }).(TransportServerSpecSessionParametersOutput)
}

func (o TransportServerSpecSessionParametersPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecSessionParameters) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// UpstreamParameters defines parameters for an upstream.
type TransportServerSpecUpstreamParameters struct {
	ConnectTimeout      *string `pulumi:"connectTimeout"`
	NextUpstream        *bool   `pulumi:"nextUpstream"`
	NextUpstreamTimeout *string `pulumi:"nextUpstreamTimeout"`
	NextUpstreamTries   *int    `pulumi:"nextUpstreamTries"`
	UdpRequests         *int    `pulumi:"udpRequests"`
	UdpResponses        *int    `pulumi:"udpResponses"`
}

// TransportServerSpecUpstreamParametersInput is an input type that accepts TransportServerSpecUpstreamParametersArgs and TransportServerSpecUpstreamParametersOutput values.
// You can construct a concrete instance of `TransportServerSpecUpstreamParametersInput` via:
//
//          TransportServerSpecUpstreamParametersArgs{...}
type TransportServerSpecUpstreamParametersInput interface {
	pulumi.Input

	ToTransportServerSpecUpstreamParametersOutput() TransportServerSpecUpstreamParametersOutput
	ToTransportServerSpecUpstreamParametersOutputWithContext(context.Context) TransportServerSpecUpstreamParametersOutput
}

// UpstreamParameters defines parameters for an upstream.
type TransportServerSpecUpstreamParametersArgs struct {
	ConnectTimeout      pulumi.StringPtrInput `pulumi:"connectTimeout"`
	NextUpstream        pulumi.BoolPtrInput   `pulumi:"nextUpstream"`
	NextUpstreamTimeout pulumi.StringPtrInput `pulumi:"nextUpstreamTimeout"`
	NextUpstreamTries   pulumi.IntPtrInput    `pulumi:"nextUpstreamTries"`
	UdpRequests         pulumi.IntPtrInput    `pulumi:"udpRequests"`
	UdpResponses        pulumi.IntPtrInput    `pulumi:"udpResponses"`
}

func (TransportServerSpecUpstreamParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecUpstreamParameters)(nil)).Elem()
}

func (i TransportServerSpecUpstreamParametersArgs) ToTransportServerSpecUpstreamParametersOutput() TransportServerSpecUpstreamParametersOutput {
	return i.ToTransportServerSpecUpstreamParametersOutputWithContext(context.Background())
}

func (i TransportServerSpecUpstreamParametersArgs) ToTransportServerSpecUpstreamParametersOutputWithContext(ctx context.Context) TransportServerSpecUpstreamParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamParametersOutput)
}

func (i TransportServerSpecUpstreamParametersArgs) ToTransportServerSpecUpstreamParametersPtrOutput() TransportServerSpecUpstreamParametersPtrOutput {
	return i.ToTransportServerSpecUpstreamParametersPtrOutputWithContext(context.Background())
}

func (i TransportServerSpecUpstreamParametersArgs) ToTransportServerSpecUpstreamParametersPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamParametersOutput).ToTransportServerSpecUpstreamParametersPtrOutputWithContext(ctx)
}

// TransportServerSpecUpstreamParametersPtrInput is an input type that accepts TransportServerSpecUpstreamParametersArgs, TransportServerSpecUpstreamParametersPtr and TransportServerSpecUpstreamParametersPtrOutput values.
// You can construct a concrete instance of `TransportServerSpecUpstreamParametersPtrInput` via:
//
//          TransportServerSpecUpstreamParametersArgs{...}
//
//  or:
//
//          nil
type TransportServerSpecUpstreamParametersPtrInput interface {
	pulumi.Input

	ToTransportServerSpecUpstreamParametersPtrOutput() TransportServerSpecUpstreamParametersPtrOutput
	ToTransportServerSpecUpstreamParametersPtrOutputWithContext(context.Context) TransportServerSpecUpstreamParametersPtrOutput
}

type transportServerSpecUpstreamParametersPtrType TransportServerSpecUpstreamParametersArgs

func TransportServerSpecUpstreamParametersPtr(v *TransportServerSpecUpstreamParametersArgs) TransportServerSpecUpstreamParametersPtrInput {
	return (*transportServerSpecUpstreamParametersPtrType)(v)
}

func (*transportServerSpecUpstreamParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecUpstreamParameters)(nil)).Elem()
}

func (i *transportServerSpecUpstreamParametersPtrType) ToTransportServerSpecUpstreamParametersPtrOutput() TransportServerSpecUpstreamParametersPtrOutput {
	return i.ToTransportServerSpecUpstreamParametersPtrOutputWithContext(context.Background())
}

func (i *transportServerSpecUpstreamParametersPtrType) ToTransportServerSpecUpstreamParametersPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamParametersPtrOutput)
}

// UpstreamParameters defines parameters for an upstream.
type TransportServerSpecUpstreamParametersOutput struct{ *pulumi.OutputState }

func (TransportServerSpecUpstreamParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecUpstreamParameters)(nil)).Elem()
}

func (o TransportServerSpecUpstreamParametersOutput) ToTransportServerSpecUpstreamParametersOutput() TransportServerSpecUpstreamParametersOutput {
	return o
}

func (o TransportServerSpecUpstreamParametersOutput) ToTransportServerSpecUpstreamParametersOutputWithContext(ctx context.Context) TransportServerSpecUpstreamParametersOutput {
	return o
}

func (o TransportServerSpecUpstreamParametersOutput) ToTransportServerSpecUpstreamParametersPtrOutput() TransportServerSpecUpstreamParametersPtrOutput {
	return o.ToTransportServerSpecUpstreamParametersPtrOutputWithContext(context.Background())
}

func (o TransportServerSpecUpstreamParametersOutput) ToTransportServerSpecUpstreamParametersPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamParametersPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamParameters) *TransportServerSpecUpstreamParameters {
		return &v
	}).(TransportServerSpecUpstreamParametersPtrOutput)
}
func (o TransportServerSpecUpstreamParametersOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamParameters) *string { return v.ConnectTimeout }).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamParametersOutput) NextUpstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamParameters) *bool { return v.NextUpstream }).(pulumi.BoolPtrOutput)
}

func (o TransportServerSpecUpstreamParametersOutput) NextUpstreamTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamParameters) *string { return v.NextUpstreamTimeout }).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamParametersOutput) NextUpstreamTries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamParameters) *int { return v.NextUpstreamTries }).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamParametersOutput) UdpRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamParameters) *int { return v.UdpRequests }).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamParametersOutput) UdpResponses() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamParameters) *int { return v.UdpResponses }).(pulumi.IntPtrOutput)
}

type TransportServerSpecUpstreamParametersPtrOutput struct{ *pulumi.OutputState }

func (TransportServerSpecUpstreamParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecUpstreamParameters)(nil)).Elem()
}

func (o TransportServerSpecUpstreamParametersPtrOutput) ToTransportServerSpecUpstreamParametersPtrOutput() TransportServerSpecUpstreamParametersPtrOutput {
	return o
}

func (o TransportServerSpecUpstreamParametersPtrOutput) ToTransportServerSpecUpstreamParametersPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamParametersPtrOutput {
	return o
}

func (o TransportServerSpecUpstreamParametersPtrOutput) Elem() TransportServerSpecUpstreamParametersOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamParameters) TransportServerSpecUpstreamParameters { return *v }).(TransportServerSpecUpstreamParametersOutput)
}

func (o TransportServerSpecUpstreamParametersPtrOutput) ConnectTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamParameters) *string {
		if v == nil {
			return nil
		}
		return v.ConnectTimeout
	}).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamParametersPtrOutput) NextUpstream() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamParameters) *bool {
		if v == nil {
			return nil
		}
		return v.NextUpstream
	}).(pulumi.BoolPtrOutput)
}

func (o TransportServerSpecUpstreamParametersPtrOutput) NextUpstreamTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamParameters) *string {
		if v == nil {
			return nil
		}
		return v.NextUpstreamTimeout
	}).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamParametersPtrOutput) NextUpstreamTries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamParameters) *int {
		if v == nil {
			return nil
		}
		return v.NextUpstreamTries
	}).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamParametersPtrOutput) UdpRequests() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamParameters) *int {
		if v == nil {
			return nil
		}
		return v.UdpRequests
	}).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamParametersPtrOutput) UdpResponses() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamParameters) *int {
		if v == nil {
			return nil
		}
		return v.UdpResponses
	}).(pulumi.IntPtrOutput)
}

// Upstream defines an upstream.
type TransportServerSpecUpstreams struct {
	FailTimeout *string `pulumi:"failTimeout"`
	// HealthCheck defines the parameters for active Upstream HealthChecks.
	HealthCheck         *TransportServerSpecUpstreamsHealthCheck `pulumi:"healthCheck"`
	LoadBalancingMethod *string                                  `pulumi:"loadBalancingMethod"`
	MaxConns            *int                                     `pulumi:"maxConns"`
	MaxFails            *int                                     `pulumi:"maxFails"`
	Name                *string                                  `pulumi:"name"`
	Port                *int                                     `pulumi:"port"`
	Service             *string                                  `pulumi:"service"`
}

// TransportServerSpecUpstreamsInput is an input type that accepts TransportServerSpecUpstreamsArgs and TransportServerSpecUpstreamsOutput values.
// You can construct a concrete instance of `TransportServerSpecUpstreamsInput` via:
//
//          TransportServerSpecUpstreamsArgs{...}
type TransportServerSpecUpstreamsInput interface {
	pulumi.Input

	ToTransportServerSpecUpstreamsOutput() TransportServerSpecUpstreamsOutput
	ToTransportServerSpecUpstreamsOutputWithContext(context.Context) TransportServerSpecUpstreamsOutput
}

// Upstream defines an upstream.
type TransportServerSpecUpstreamsArgs struct {
	FailTimeout pulumi.StringPtrInput `pulumi:"failTimeout"`
	// HealthCheck defines the parameters for active Upstream HealthChecks.
	HealthCheck         TransportServerSpecUpstreamsHealthCheckPtrInput `pulumi:"healthCheck"`
	LoadBalancingMethod pulumi.StringPtrInput                           `pulumi:"loadBalancingMethod"`
	MaxConns            pulumi.IntPtrInput                              `pulumi:"maxConns"`
	MaxFails            pulumi.IntPtrInput                              `pulumi:"maxFails"`
	Name                pulumi.StringPtrInput                           `pulumi:"name"`
	Port                pulumi.IntPtrInput                              `pulumi:"port"`
	Service             pulumi.StringPtrInput                           `pulumi:"service"`
}

func (TransportServerSpecUpstreamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecUpstreams)(nil)).Elem()
}

func (i TransportServerSpecUpstreamsArgs) ToTransportServerSpecUpstreamsOutput() TransportServerSpecUpstreamsOutput {
	return i.ToTransportServerSpecUpstreamsOutputWithContext(context.Background())
}

func (i TransportServerSpecUpstreamsArgs) ToTransportServerSpecUpstreamsOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamsOutput)
}

// TransportServerSpecUpstreamsArrayInput is an input type that accepts TransportServerSpecUpstreamsArray and TransportServerSpecUpstreamsArrayOutput values.
// You can construct a concrete instance of `TransportServerSpecUpstreamsArrayInput` via:
//
//          TransportServerSpecUpstreamsArray{ TransportServerSpecUpstreamsArgs{...} }
type TransportServerSpecUpstreamsArrayInput interface {
	pulumi.Input

	ToTransportServerSpecUpstreamsArrayOutput() TransportServerSpecUpstreamsArrayOutput
	ToTransportServerSpecUpstreamsArrayOutputWithContext(context.Context) TransportServerSpecUpstreamsArrayOutput
}

type TransportServerSpecUpstreamsArray []TransportServerSpecUpstreamsInput

func (TransportServerSpecUpstreamsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransportServerSpecUpstreams)(nil)).Elem()
}

func (i TransportServerSpecUpstreamsArray) ToTransportServerSpecUpstreamsArrayOutput() TransportServerSpecUpstreamsArrayOutput {
	return i.ToTransportServerSpecUpstreamsArrayOutputWithContext(context.Background())
}

func (i TransportServerSpecUpstreamsArray) ToTransportServerSpecUpstreamsArrayOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamsArrayOutput)
}

// Upstream defines an upstream.
type TransportServerSpecUpstreamsOutput struct{ *pulumi.OutputState }

func (TransportServerSpecUpstreamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecUpstreams)(nil)).Elem()
}

func (o TransportServerSpecUpstreamsOutput) ToTransportServerSpecUpstreamsOutput() TransportServerSpecUpstreamsOutput {
	return o
}

func (o TransportServerSpecUpstreamsOutput) ToTransportServerSpecUpstreamsOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsOutput {
	return o
}

func (o TransportServerSpecUpstreamsOutput) FailTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreams) *string { return v.FailTimeout }).(pulumi.StringPtrOutput)
}

// HealthCheck defines the parameters for active Upstream HealthChecks.
func (o TransportServerSpecUpstreamsOutput) HealthCheck() TransportServerSpecUpstreamsHealthCheckPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreams) *TransportServerSpecUpstreamsHealthCheck { return v.HealthCheck }).(TransportServerSpecUpstreamsHealthCheckPtrOutput)
}

func (o TransportServerSpecUpstreamsOutput) LoadBalancingMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreams) *string { return v.LoadBalancingMethod }).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamsOutput) MaxConns() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreams) *int { return v.MaxConns }).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamsOutput) MaxFails() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreams) *int { return v.MaxFails }).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreams) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamsOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreams) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamsOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreams) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type TransportServerSpecUpstreamsArrayOutput struct{ *pulumi.OutputState }

func (TransportServerSpecUpstreamsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TransportServerSpecUpstreams)(nil)).Elem()
}

func (o TransportServerSpecUpstreamsArrayOutput) ToTransportServerSpecUpstreamsArrayOutput() TransportServerSpecUpstreamsArrayOutput {
	return o
}

func (o TransportServerSpecUpstreamsArrayOutput) ToTransportServerSpecUpstreamsArrayOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsArrayOutput {
	return o
}

func (o TransportServerSpecUpstreamsArrayOutput) Index(i pulumi.IntInput) TransportServerSpecUpstreamsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TransportServerSpecUpstreams {
		return vs[0].([]TransportServerSpecUpstreams)[vs[1].(int)]
	}).(TransportServerSpecUpstreamsOutput)
}

// HealthCheck defines the parameters for active Upstream HealthChecks.
type TransportServerSpecUpstreamsHealthCheck struct {
	Enable   *bool   `pulumi:"enable"`
	Fails    *int    `pulumi:"fails"`
	Interval *string `pulumi:"interval"`
	Jitter   *string `pulumi:"jitter"`
	// Match defines the parameters of a custom health check.
	Match   *TransportServerSpecUpstreamsHealthCheckMatch `pulumi:"match"`
	Passes  *int                                          `pulumi:"passes"`
	Port    *int                                          `pulumi:"port"`
	Timeout *string                                       `pulumi:"timeout"`
}

// TransportServerSpecUpstreamsHealthCheckInput is an input type that accepts TransportServerSpecUpstreamsHealthCheckArgs and TransportServerSpecUpstreamsHealthCheckOutput values.
// You can construct a concrete instance of `TransportServerSpecUpstreamsHealthCheckInput` via:
//
//          TransportServerSpecUpstreamsHealthCheckArgs{...}
type TransportServerSpecUpstreamsHealthCheckInput interface {
	pulumi.Input

	ToTransportServerSpecUpstreamsHealthCheckOutput() TransportServerSpecUpstreamsHealthCheckOutput
	ToTransportServerSpecUpstreamsHealthCheckOutputWithContext(context.Context) TransportServerSpecUpstreamsHealthCheckOutput
}

// HealthCheck defines the parameters for active Upstream HealthChecks.
type TransportServerSpecUpstreamsHealthCheckArgs struct {
	Enable   pulumi.BoolPtrInput   `pulumi:"enable"`
	Fails    pulumi.IntPtrInput    `pulumi:"fails"`
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	Jitter   pulumi.StringPtrInput `pulumi:"jitter"`
	// Match defines the parameters of a custom health check.
	Match   TransportServerSpecUpstreamsHealthCheckMatchPtrInput `pulumi:"match"`
	Passes  pulumi.IntPtrInput                                   `pulumi:"passes"`
	Port    pulumi.IntPtrInput                                   `pulumi:"port"`
	Timeout pulumi.StringPtrInput                                `pulumi:"timeout"`
}

func (TransportServerSpecUpstreamsHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecUpstreamsHealthCheck)(nil)).Elem()
}

func (i TransportServerSpecUpstreamsHealthCheckArgs) ToTransportServerSpecUpstreamsHealthCheckOutput() TransportServerSpecUpstreamsHealthCheckOutput {
	return i.ToTransportServerSpecUpstreamsHealthCheckOutputWithContext(context.Background())
}

func (i TransportServerSpecUpstreamsHealthCheckArgs) ToTransportServerSpecUpstreamsHealthCheckOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamsHealthCheckOutput)
}

func (i TransportServerSpecUpstreamsHealthCheckArgs) ToTransportServerSpecUpstreamsHealthCheckPtrOutput() TransportServerSpecUpstreamsHealthCheckPtrOutput {
	return i.ToTransportServerSpecUpstreamsHealthCheckPtrOutputWithContext(context.Background())
}

func (i TransportServerSpecUpstreamsHealthCheckArgs) ToTransportServerSpecUpstreamsHealthCheckPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamsHealthCheckOutput).ToTransportServerSpecUpstreamsHealthCheckPtrOutputWithContext(ctx)
}

// TransportServerSpecUpstreamsHealthCheckPtrInput is an input type that accepts TransportServerSpecUpstreamsHealthCheckArgs, TransportServerSpecUpstreamsHealthCheckPtr and TransportServerSpecUpstreamsHealthCheckPtrOutput values.
// You can construct a concrete instance of `TransportServerSpecUpstreamsHealthCheckPtrInput` via:
//
//          TransportServerSpecUpstreamsHealthCheckArgs{...}
//
//  or:
//
//          nil
type TransportServerSpecUpstreamsHealthCheckPtrInput interface {
	pulumi.Input

	ToTransportServerSpecUpstreamsHealthCheckPtrOutput() TransportServerSpecUpstreamsHealthCheckPtrOutput
	ToTransportServerSpecUpstreamsHealthCheckPtrOutputWithContext(context.Context) TransportServerSpecUpstreamsHealthCheckPtrOutput
}

type transportServerSpecUpstreamsHealthCheckPtrType TransportServerSpecUpstreamsHealthCheckArgs

func TransportServerSpecUpstreamsHealthCheckPtr(v *TransportServerSpecUpstreamsHealthCheckArgs) TransportServerSpecUpstreamsHealthCheckPtrInput {
	return (*transportServerSpecUpstreamsHealthCheckPtrType)(v)
}

func (*transportServerSpecUpstreamsHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecUpstreamsHealthCheck)(nil)).Elem()
}

func (i *transportServerSpecUpstreamsHealthCheckPtrType) ToTransportServerSpecUpstreamsHealthCheckPtrOutput() TransportServerSpecUpstreamsHealthCheckPtrOutput {
	return i.ToTransportServerSpecUpstreamsHealthCheckPtrOutputWithContext(context.Background())
}

func (i *transportServerSpecUpstreamsHealthCheckPtrType) ToTransportServerSpecUpstreamsHealthCheckPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamsHealthCheckPtrOutput)
}

// HealthCheck defines the parameters for active Upstream HealthChecks.
type TransportServerSpecUpstreamsHealthCheckOutput struct{ *pulumi.OutputState }

func (TransportServerSpecUpstreamsHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecUpstreamsHealthCheck)(nil)).Elem()
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) ToTransportServerSpecUpstreamsHealthCheckOutput() TransportServerSpecUpstreamsHealthCheckOutput {
	return o
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) ToTransportServerSpecUpstreamsHealthCheckOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckOutput {
	return o
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) ToTransportServerSpecUpstreamsHealthCheckPtrOutput() TransportServerSpecUpstreamsHealthCheckPtrOutput {
	return o.ToTransportServerSpecUpstreamsHealthCheckPtrOutputWithContext(context.Background())
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) ToTransportServerSpecUpstreamsHealthCheckPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheck) *TransportServerSpecUpstreamsHealthCheck {
		return &v
	}).(TransportServerSpecUpstreamsHealthCheckPtrOutput)
}
func (o TransportServerSpecUpstreamsHealthCheckOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheck) *bool { return v.Enable }).(pulumi.BoolPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) Fails() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheck) *int { return v.Fails }).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheck) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) Jitter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheck) *string { return v.Jitter }).(pulumi.StringPtrOutput)
}

// Match defines the parameters of a custom health check.
func (o TransportServerSpecUpstreamsHealthCheckOutput) Match() TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheck) *TransportServerSpecUpstreamsHealthCheckMatch {
		return v.Match
	}).(TransportServerSpecUpstreamsHealthCheckMatchPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) Passes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheck) *int { return v.Passes }).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheck) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type TransportServerSpecUpstreamsHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TransportServerSpecUpstreamsHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecUpstreamsHealthCheck)(nil)).Elem()
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) ToTransportServerSpecUpstreamsHealthCheckPtrOutput() TransportServerSpecUpstreamsHealthCheckPtrOutput {
	return o
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) ToTransportServerSpecUpstreamsHealthCheckPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckPtrOutput {
	return o
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) Elem() TransportServerSpecUpstreamsHealthCheckOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheck) TransportServerSpecUpstreamsHealthCheck { return *v }).(TransportServerSpecUpstreamsHealthCheckOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheck) *bool {
		if v == nil {
			return nil
		}
		return v.Enable
	}).(pulumi.BoolPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) Fails() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Fails
	}).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) Jitter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Jitter
	}).(pulumi.StringPtrOutput)
}

// Match defines the parameters of a custom health check.
func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) Match() TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheck) *TransportServerSpecUpstreamsHealthCheckMatch {
		if v == nil {
			return nil
		}
		return v.Match
	}).(TransportServerSpecUpstreamsHealthCheckMatchPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) Passes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Passes
	}).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// Match defines the parameters of a custom health check.
type TransportServerSpecUpstreamsHealthCheckMatch struct {
	Expect *string `pulumi:"expect"`
	Send   *string `pulumi:"send"`
}

// TransportServerSpecUpstreamsHealthCheckMatchInput is an input type that accepts TransportServerSpecUpstreamsHealthCheckMatchArgs and TransportServerSpecUpstreamsHealthCheckMatchOutput values.
// You can construct a concrete instance of `TransportServerSpecUpstreamsHealthCheckMatchInput` via:
//
//          TransportServerSpecUpstreamsHealthCheckMatchArgs{...}
type TransportServerSpecUpstreamsHealthCheckMatchInput interface {
	pulumi.Input

	ToTransportServerSpecUpstreamsHealthCheckMatchOutput() TransportServerSpecUpstreamsHealthCheckMatchOutput
	ToTransportServerSpecUpstreamsHealthCheckMatchOutputWithContext(context.Context) TransportServerSpecUpstreamsHealthCheckMatchOutput
}

// Match defines the parameters of a custom health check.
type TransportServerSpecUpstreamsHealthCheckMatchArgs struct {
	Expect pulumi.StringPtrInput `pulumi:"expect"`
	Send   pulumi.StringPtrInput `pulumi:"send"`
}

func (TransportServerSpecUpstreamsHealthCheckMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecUpstreamsHealthCheckMatch)(nil)).Elem()
}

func (i TransportServerSpecUpstreamsHealthCheckMatchArgs) ToTransportServerSpecUpstreamsHealthCheckMatchOutput() TransportServerSpecUpstreamsHealthCheckMatchOutput {
	return i.ToTransportServerSpecUpstreamsHealthCheckMatchOutputWithContext(context.Background())
}

func (i TransportServerSpecUpstreamsHealthCheckMatchArgs) ToTransportServerSpecUpstreamsHealthCheckMatchOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamsHealthCheckMatchOutput)
}

func (i TransportServerSpecUpstreamsHealthCheckMatchArgs) ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutput() TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return i.ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutputWithContext(context.Background())
}

func (i TransportServerSpecUpstreamsHealthCheckMatchArgs) ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamsHealthCheckMatchOutput).ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutputWithContext(ctx)
}

// TransportServerSpecUpstreamsHealthCheckMatchPtrInput is an input type that accepts TransportServerSpecUpstreamsHealthCheckMatchArgs, TransportServerSpecUpstreamsHealthCheckMatchPtr and TransportServerSpecUpstreamsHealthCheckMatchPtrOutput values.
// You can construct a concrete instance of `TransportServerSpecUpstreamsHealthCheckMatchPtrInput` via:
//
//          TransportServerSpecUpstreamsHealthCheckMatchArgs{...}
//
//  or:
//
//          nil
type TransportServerSpecUpstreamsHealthCheckMatchPtrInput interface {
	pulumi.Input

	ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutput() TransportServerSpecUpstreamsHealthCheckMatchPtrOutput
	ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutputWithContext(context.Context) TransportServerSpecUpstreamsHealthCheckMatchPtrOutput
}

type transportServerSpecUpstreamsHealthCheckMatchPtrType TransportServerSpecUpstreamsHealthCheckMatchArgs

func TransportServerSpecUpstreamsHealthCheckMatchPtr(v *TransportServerSpecUpstreamsHealthCheckMatchArgs) TransportServerSpecUpstreamsHealthCheckMatchPtrInput {
	return (*transportServerSpecUpstreamsHealthCheckMatchPtrType)(v)
}

func (*transportServerSpecUpstreamsHealthCheckMatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecUpstreamsHealthCheckMatch)(nil)).Elem()
}

func (i *transportServerSpecUpstreamsHealthCheckMatchPtrType) ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutput() TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return i.ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutputWithContext(context.Background())
}

func (i *transportServerSpecUpstreamsHealthCheckMatchPtrType) ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerSpecUpstreamsHealthCheckMatchPtrOutput)
}

// Match defines the parameters of a custom health check.
type TransportServerSpecUpstreamsHealthCheckMatchOutput struct{ *pulumi.OutputState }

func (TransportServerSpecUpstreamsHealthCheckMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerSpecUpstreamsHealthCheckMatch)(nil)).Elem()
}

func (o TransportServerSpecUpstreamsHealthCheckMatchOutput) ToTransportServerSpecUpstreamsHealthCheckMatchOutput() TransportServerSpecUpstreamsHealthCheckMatchOutput {
	return o
}

func (o TransportServerSpecUpstreamsHealthCheckMatchOutput) ToTransportServerSpecUpstreamsHealthCheckMatchOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckMatchOutput {
	return o
}

func (o TransportServerSpecUpstreamsHealthCheckMatchOutput) ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutput() TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return o.ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutputWithContext(context.Background())
}

func (o TransportServerSpecUpstreamsHealthCheckMatchOutput) ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheckMatch) *TransportServerSpecUpstreamsHealthCheckMatch {
		return &v
	}).(TransportServerSpecUpstreamsHealthCheckMatchPtrOutput)
}
func (o TransportServerSpecUpstreamsHealthCheckMatchOutput) Expect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheckMatch) *string { return v.Expect }).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckMatchOutput) Send() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerSpecUpstreamsHealthCheckMatch) *string { return v.Send }).(pulumi.StringPtrOutput)
}

type TransportServerSpecUpstreamsHealthCheckMatchPtrOutput struct{ *pulumi.OutputState }

func (TransportServerSpecUpstreamsHealthCheckMatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerSpecUpstreamsHealthCheckMatch)(nil)).Elem()
}

func (o TransportServerSpecUpstreamsHealthCheckMatchPtrOutput) ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutput() TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return o
}

func (o TransportServerSpecUpstreamsHealthCheckMatchPtrOutput) ToTransportServerSpecUpstreamsHealthCheckMatchPtrOutputWithContext(ctx context.Context) TransportServerSpecUpstreamsHealthCheckMatchPtrOutput {
	return o
}

func (o TransportServerSpecUpstreamsHealthCheckMatchPtrOutput) Elem() TransportServerSpecUpstreamsHealthCheckMatchOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheckMatch) TransportServerSpecUpstreamsHealthCheckMatch {
		return *v
	}).(TransportServerSpecUpstreamsHealthCheckMatchOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckMatchPtrOutput) Expect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheckMatch) *string {
		if v == nil {
			return nil
		}
		return v.Expect
	}).(pulumi.StringPtrOutput)
}

func (o TransportServerSpecUpstreamsHealthCheckMatchPtrOutput) Send() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerSpecUpstreamsHealthCheckMatch) *string {
		if v == nil {
			return nil
		}
		return v.Send
	}).(pulumi.StringPtrOutput)
}

// TransportServerStatus defines the status for the TransportServer resource.
type TransportServerStatus struct {
	Message *string `pulumi:"message"`
	Reason  *string `pulumi:"reason"`
	State   *string `pulumi:"state"`
}

// TransportServerStatusInput is an input type that accepts TransportServerStatusArgs and TransportServerStatusOutput values.
// You can construct a concrete instance of `TransportServerStatusInput` via:
//
//          TransportServerStatusArgs{...}
type TransportServerStatusInput interface {
	pulumi.Input

	ToTransportServerStatusOutput() TransportServerStatusOutput
	ToTransportServerStatusOutputWithContext(context.Context) TransportServerStatusOutput
}

// TransportServerStatus defines the status for the TransportServer resource.
type TransportServerStatusArgs struct {
	Message pulumi.StringPtrInput `pulumi:"message"`
	Reason  pulumi.StringPtrInput `pulumi:"reason"`
	State   pulumi.StringPtrInput `pulumi:"state"`
}

func (TransportServerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerStatus)(nil)).Elem()
}

func (i TransportServerStatusArgs) ToTransportServerStatusOutput() TransportServerStatusOutput {
	return i.ToTransportServerStatusOutputWithContext(context.Background())
}

func (i TransportServerStatusArgs) ToTransportServerStatusOutputWithContext(ctx context.Context) TransportServerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerStatusOutput)
}

func (i TransportServerStatusArgs) ToTransportServerStatusPtrOutput() TransportServerStatusPtrOutput {
	return i.ToTransportServerStatusPtrOutputWithContext(context.Background())
}

func (i TransportServerStatusArgs) ToTransportServerStatusPtrOutputWithContext(ctx context.Context) TransportServerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerStatusOutput).ToTransportServerStatusPtrOutputWithContext(ctx)
}

// TransportServerStatusPtrInput is an input type that accepts TransportServerStatusArgs, TransportServerStatusPtr and TransportServerStatusPtrOutput values.
// You can construct a concrete instance of `TransportServerStatusPtrInput` via:
//
//          TransportServerStatusArgs{...}
//
//  or:
//
//          nil
type TransportServerStatusPtrInput interface {
	pulumi.Input

	ToTransportServerStatusPtrOutput() TransportServerStatusPtrOutput
	ToTransportServerStatusPtrOutputWithContext(context.Context) TransportServerStatusPtrOutput
}

type transportServerStatusPtrType TransportServerStatusArgs

func TransportServerStatusPtr(v *TransportServerStatusArgs) TransportServerStatusPtrInput {
	return (*transportServerStatusPtrType)(v)
}

func (*transportServerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerStatus)(nil)).Elem()
}

func (i *transportServerStatusPtrType) ToTransportServerStatusPtrOutput() TransportServerStatusPtrOutput {
	return i.ToTransportServerStatusPtrOutputWithContext(context.Background())
}

func (i *transportServerStatusPtrType) ToTransportServerStatusPtrOutputWithContext(ctx context.Context) TransportServerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransportServerStatusPtrOutput)
}

// TransportServerStatus defines the status for the TransportServer resource.
type TransportServerStatusOutput struct{ *pulumi.OutputState }

func (TransportServerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransportServerStatus)(nil)).Elem()
}

func (o TransportServerStatusOutput) ToTransportServerStatusOutput() TransportServerStatusOutput {
	return o
}

func (o TransportServerStatusOutput) ToTransportServerStatusOutputWithContext(ctx context.Context) TransportServerStatusOutput {
	return o
}

func (o TransportServerStatusOutput) ToTransportServerStatusPtrOutput() TransportServerStatusPtrOutput {
	return o.ToTransportServerStatusPtrOutputWithContext(context.Background())
}

func (o TransportServerStatusOutput) ToTransportServerStatusPtrOutputWithContext(ctx context.Context) TransportServerStatusPtrOutput {
	return o.ApplyT(func(v TransportServerStatus) *TransportServerStatus {
		return &v
	}).(TransportServerStatusPtrOutput)
}
func (o TransportServerStatusOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerStatus) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o TransportServerStatusOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerStatus) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o TransportServerStatusOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TransportServerStatus) *string { return v.State }).(pulumi.StringPtrOutput)
}

type TransportServerStatusPtrOutput struct{ *pulumi.OutputState }

func (TransportServerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TransportServerStatus)(nil)).Elem()
}

func (o TransportServerStatusPtrOutput) ToTransportServerStatusPtrOutput() TransportServerStatusPtrOutput {
	return o
}

func (o TransportServerStatusPtrOutput) ToTransportServerStatusPtrOutputWithContext(ctx context.Context) TransportServerStatusPtrOutput {
	return o
}

func (o TransportServerStatusPtrOutput) Elem() TransportServerStatusOutput {
	return o.ApplyT(func(v *TransportServerStatus) TransportServerStatus { return *v }).(TransportServerStatusOutput)
}

func (o TransportServerStatusPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o TransportServerStatusPtrOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.Reason
	}).(pulumi.StringPtrOutput)
}

func (o TransportServerStatusPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TransportServerStatus) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GlobalConfigurationTypeOutput{})
	pulumi.RegisterOutputType(GlobalConfigurationMetadataOutput{})
	pulumi.RegisterOutputType(GlobalConfigurationSpecOutput{})
	pulumi.RegisterOutputType(GlobalConfigurationSpecPtrOutput{})
	pulumi.RegisterOutputType(GlobalConfigurationSpecListenersOutput{})
	pulumi.RegisterOutputType(GlobalConfigurationSpecListenersArrayOutput{})
	pulumi.RegisterOutputType(TransportServerTypeOutput{})
	pulumi.RegisterOutputType(TransportServerMetadataOutput{})
	pulumi.RegisterOutputType(TransportServerSpecOutput{})
	pulumi.RegisterOutputType(TransportServerSpecPtrOutput{})
	pulumi.RegisterOutputType(TransportServerSpecActionOutput{})
	pulumi.RegisterOutputType(TransportServerSpecActionPtrOutput{})
	pulumi.RegisterOutputType(TransportServerSpecListenerOutput{})
	pulumi.RegisterOutputType(TransportServerSpecListenerPtrOutput{})
	pulumi.RegisterOutputType(TransportServerSpecSessionParametersOutput{})
	pulumi.RegisterOutputType(TransportServerSpecSessionParametersPtrOutput{})
	pulumi.RegisterOutputType(TransportServerSpecUpstreamParametersOutput{})
	pulumi.RegisterOutputType(TransportServerSpecUpstreamParametersPtrOutput{})
	pulumi.RegisterOutputType(TransportServerSpecUpstreamsOutput{})
	pulumi.RegisterOutputType(TransportServerSpecUpstreamsArrayOutput{})
	pulumi.RegisterOutputType(TransportServerSpecUpstreamsHealthCheckOutput{})
	pulumi.RegisterOutputType(TransportServerSpecUpstreamsHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TransportServerSpecUpstreamsHealthCheckMatchOutput{})
	pulumi.RegisterOutputType(TransportServerSpecUpstreamsHealthCheckMatchPtrOutput{})
	pulumi.RegisterOutputType(TransportServerStatusOutput{})
	pulumi.RegisterOutputType(TransportServerStatusPtrOutput{})
}
